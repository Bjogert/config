# Home Assistant Configuration
# Author: Robert & Julia
# Last Updated: 2025-01-18
# Description: Main configuration for smart home automation system
#              including duck door control, beer elevator, and lighting automation

# ================================
# SYSTEM CONFIGURATION
# ================================

# Loads default set of integrations. Do not remove.
default_config:

# ================================
# LONG-TERM DATA STORAGE
# ================================

# Extended data retention for chicken monitoring
recorder:
  purge_keep_days: 365  # Keep data for 1 year
  include:
    entities:
      # Chicken RFID monitoring entities - commented out until ESP32 system is ready
      # - sensor.nest_1_status
      # - sensor.nest_1_occupant
      # - sensor.current_visit_duration
      # - sensor.chicken_visits_log
      # - sensor.chicken_leaderboard
      # - sensor.chicken_system_status
      # - binary_sensor.nest_1_occupied
      # - binary_sensor.chicken_system_online
      
      # Chicken input helpers - will be created manually via UI
      - input_number.daily_chicken_visits
      - input_number.weekly_chicken_visits
      - input_text.daily_chicken_champion
      - input_text.weekly_chicken_champion
      - input_text.current_nest_occupant
  exclude:
    # Keep database smaller by excluding less important entities
    domains:
      - camera
      - weather
    entities:
      # - sensor.uptime  # Commented out - entity doesn't exist

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /hacsfiles/material-you-utilities/material-you-utilities.min.js

# Lovelace dashboards configuration
lovelace:
  mode: storage
  dashboards:
    hoensgaarden-dashboard:
      mode: yaml
      title: 🐔 Hönsgården
      icon: mdi:bird
      show_in_sidebar: true
      filename: dashboards/hoensgaarden.yaml
    camera-controls:
      mode: yaml  
      title: 📹 Camera Controls
      icon: mdi:camera
      show_in_sidebar: true
      filename: ui-lovelace.yaml

# Custom panels for Material You Utilities
panel_custom:
  - name: material-you-panel
    url_path: material-you-configuration
    sidebar_title: Material You Utilities
    sidebar_icon: mdi:material-design
    module_url: /hacsfiles/material-you-utilities/material-you-utilities.min.js

# YAML file includes for better organization
automation: !include automations.yaml  # Automations are handled in automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# ================================
# SHELL COMMANDS
# ================================

# Shell command to start kiosk mode
shell_command:
  start_kiosk: chromium-browser --noerrdialogs --disable-infobars --kiosk http://192.168.68.105:8123
  vlc_status: 'echo "status" | nc 192.168.68.112 4212 > /config/vlc_status.txt'
  restart_vlc: 'echo "add https://http-live.sr.se/p4goteborg-mp3-192" | nc 192.168.68.112 4212'

# ================================
# INPUT ENTITIES
# ================================

# Text input entities for storing dynamic values
input_text:
  aktiv_radiokanal:
    name: "Aktiv Radiokanal"
    initial: ""
  senaste_radiourl:
    name: "Senaste Radiourl"
    initial: ""
  last_active_scene:
    name: "Last Active Scene"
    initial: ""
  # Chicken monitoring inputs are created manually via UI to avoid conflicts

# Number input entities for device control
input_number:
  beer_elevator_speed:
    name: Hisshastighet
    initial: 575
    min: 100
    max: 2000
    step: 10
    mode: box
    unit_of_measurement: "steps/sec"
    
  beer_elevator_acceleration:
    name: Hissacceleration
    initial: 120
    min: 10
    max: 1000
    step: 10
    mode: box
    unit_of_measurement: "steps/s²"

  beer_elevator_extra_steps_up:
    name: Extra Steg Uppåt
    initial: 50
    min: 0
    max: 200
    step: 1
    mode: box
    unit_of_measurement: "steps"
    
  beer_elevator_extra_steps_down:
    name: Extra Steg Nedåt
    initial: 100
    min: 0
    max: 200
    step: 1
    mode: box
    unit_of_measurement: "steps"
    
  vlc_volume:
    name: VLC Volume
    initial: 0.5
    min: 0
    max: 1
    step: 0.01
    mode: slider

  badtunnan_notification_count:
    name: "Badtunnan Daily Notification Count"
    initial: 0
    min: 0
    max: 10
    step: 1
    mode: box

  duck_door_notification_count:
    name: "Duck Door Daily Notification Count"
    initial: 0
    min: 0
    max: 10
    step: 1
    mode: box

  # Chicken monitoring counters are created manually via UI to avoid conflicts

# ================================
# TEXT-TO-SPEECH CONFIGURATION
# ================================

# Text-to-Speech settings
tts:
  - platform: google_translate
    language: "sv"  # Or use "sv" for Swedish
    cache: true
    cache_dir: /config/tts
    time_memory: 300

# ================================
# ENTITY CUSTOMIZATION
# ================================

homeassistant:
  customize:
    sensor.hot_tub_temperature:
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_temperature_1:
      friendly_name: "Hönshuset"
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_humidity_1:
      friendly_name: "Luftfuktighet 1"
      state_class: measurement
      unit_of_measurement: "%"
      device_class: humidity

    sensor.esp32_temperature_2:
      friendly_name: "Altanen"
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_humidity_2:
      friendly_name: "Luftfuktighet 2"
      state_class: measurement
      unit_of_measurement: "%"
      device_class: humidity

    sensor.esp32_temperature_3:
      friendly_name: "Storarummet"
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_humidity_3:
      friendly_name: "Luftfuktighet 3"
      state_class: measurement
      unit_of_measurement: "%"
      device_class: humidity

    sensor.esp32_temperature_4:
      friendly_name: "Sovrummet"
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_humidity_4:
      friendly_name: "Luftfuktighet 4"
      state_class: measurement
      unit_of_measurement: "%"
      device_class: humidity

    sensor.esp32_humidity_5:
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature

    sensor.esp32_temperature_7:
      friendly_name: "Badtunnan Temp"
      state_class: measurement
      unit_of_measurement: "°C"
      device_class: temperature
      

# ================================
# BOOLEAN TOGGLES
# ================================

# Input Booleans to track button press
input_boolean:
  confirmation_active:
    name: Chickendoor Confirmation Active
    initial: off
  chickendoor_pressed:
    name: Chickendoor Button Pressed
    initial: off
    

  duck_door_is_open:
    name: "Duck Door Is Open"
    icon: mdi:gate    
    

# ================================
# MQTT CONFIGURATION
# ================================

# Combined MQTT configuration
mqtt:
  switch:
    - name: "Chickendoor Control"
      state_topic: "chickendoor/status"
      command_topic: "chickendoor/control"
      payload_on: "close"
      payload_off: "close"
      state_on: "closing"
      state_off: "ready"
      optimistic: false
      retain: false

    - name: "Chicken Door Emergency Stop"
      command_topic: "chickendoor/emergency"
      payload_on: "ON"
      payload_off: "OFF"
      icon: mdi:stop-circle
      
    - name: "Underbaren"
      command_topic: "beer_elevator/command"
      payload_on: "up"
      payload_off: "down"
      optimistic: false
      retain: false
      
    # ================================
    # CAMERA CONTROL SWITCHES  
    # ================================
    
    - name: "Camera Vertical Flip"
      state_topic: "camera/vflip/status"
      command_topic: "camera/vflip/set"
      payload_on: "0"     # Note: Reversed logic for camera
      payload_off: "1"
      state_on: "false"   # When camera reports false, HA shows ON
      state_off: "true"   # When camera reports true, HA shows OFF
      value_template: "{{ value | string }}"
      icon: "mdi:flip-vertical"
      
    - name: "Camera Horizontal Mirror"
      state_topic: "camera/hmirror/status"
      command_topic: "camera/hmirror/set"
      payload_on: "1"
      payload_off: "0"
      state_on: "true"
      state_off: "false"
      value_template: "{{ value | string }}"
      icon: "mdi:flip-horizontal"
      
    - name: "Screen Flip (OLED)"
      state_topic: "screen/flip/status"
      command_topic: "screen/flip/set"
      payload_on: "1"
      payload_off: "0"
      state_on: "true"
      state_off: "false"
      value_template: "{{ value | string }}"
      icon: "mdi:phone-rotate-portrait"
      
  button:
    # ================================
    # CHICKEN DOOR CONTROL
    # ================================
    
    - unique_id: chicken_door_close
      name: "Close Chicken Door"
      command_topic: "chickendoor/control"
      payload_press: "close"
      icon: "mdi:door"
      
    # ================================
    # DUCK DOOR CONTROL
    # ================================

    - unique_id: duck_door_open
      name: "Open Duck Door"
      command_topic: "duck/door/command"
      payload_press: "open"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"

    - unique_id: duck_door_close
      name: "Close Duck Door"
      command_topic: "duck/door/command"
      payload_press: "close"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"
      
    - unique_id: beer_elevator_set_home
      name: "Nollställ Hemläge"
      command_topic: "beer_elevator/set_home"
      payload_press: "1"
      qos: 0      
      
    - unique_id: duck_door_stop
      name: "Duck Door Emergency Stop"
      command_topic: "duck/door/command"
      payload_press: "stop"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"
      
    - unique_id: duck_door_home
      name: "Duck Door Home Position"
      command_topic: "duck/door/position/set"
      payload_press: "home"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"      

  number:
    # ================================
    # CHICKEN DOOR CONTROLS
    # ================================
    
    - name: "Chicken Door Steps"
      command_topic: "chickendoor/steps"
      state_topic: "chickendoor/steps"
      min: 100
      max: 25000
      step: 10
      mode: box
      icon: "mdi:counter"
      unit_of_measurement: "steps"
      retain: true

    - name: "Chicken Door Speed"
      unique_id: chicken_door_speed
      state_topic: "chickendoor/speed"
      command_topic: "chickendoor/speed"
      min: 100
      max: 5000
      step: 10
      mode: box
      unit_of_measurement: "steps/sec"
      icon: "mdi:speedometer"
      retain: true

    - name: "Chicken Door Backward Steps"
      unique_id: "chicken_door_backward_steps"
      state_topic: "chickendoor/backsteps"
      command_topic: "chickendoor/backsteps"
      min: 100
      max: 25000
      step: 10
      mode: box
      unit_of_measurement: "steps"
      icon: "mdi:backup-restore"
      retain: true

    # ================================
    # DUCK DOOR CONTROLS
    # ================================

    - unique_id: duck_door_rotation_count
      name: "Duck Door Duration Setting"
      state_topic: "duck/door/rotation_count"
      command_topic: "duck/door/rotation_count/set"
      min: 1
      max: 75
      step: 1
      mode: box
      unit_of_measurement: "seconds"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"      

    # ================================
    # LILYGO CAMERA CONTROLS
    # ================================
    
    - name: "Camera Quality"
      state_topic: "camera/quality/status"
      command_topic: "camera/quality/set"
      min: 1
      max: 63
      step: 1
      mode: slider
      unit_of_measurement: ""
      icon: "mdi:quality-high"
      value_template: "{{ value_json.quality | default(10) }}"

    - name: "Camera Brightness"
      state_topic: "camera/brightness/status"
      command_topic: "camera/brightness/set"
      min: -2
      max: 2
      step: 1
      mode: slider
      icon: "mdi:brightness-6"
      value_template: "{{ value_json.brightness | default(0) }}"

    - name: "Camera Contrast"
      state_topic: "camera/contrast/status"
      command_topic: "camera/contrast/set"
      min: -2
      max: 2
      step: 1
      mode: slider
      icon: "mdi:contrast"
      value_template: "{{ value_json.contrast | default(0) }}"

    - name: "Camera Saturation"
      state_topic: "camera/saturation/status"
      command_topic: "camera/saturation/set"
      min: -2
      max: 2
      step: 1
      mode: slider
      icon: "mdi:palette"
      value_template: "{{ value_json.saturation | default(0) }}"

    - name: "Camera Frequency"
      state_topic: "camera/frequency/status"
      command_topic: "camera/frequency/set"
      min: 10
      max: 25
      step: 1
      mode: slider
      unit_of_measurement: "MHz"
      icon: "mdi:sine-wave"
      value_template: "{{ value_json.frequency_mhz | default(20) }}"      

  sensor:
    # ================================
    # ESP32 TEMPERATURE SENSORS
    # ================================
    
    - name: "ESP32 Temperature 1"
      state_topic: "home/esp32_1/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Humidity 1"
      state_topic: "home/esp32_1/humidity"
      unit_of_measurement: "%"
      value_template: "{{ value | float | round(0) }}"
      device_class: "humidity"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Temperature 2"
      state_topic: "home/esp32_2/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Humidity 2"
      state_topic: "home/esp32_2/humidity"
      unit_of_measurement: "%"
      value_template: "{{ value | float | round(0) }}"
      device_class: "humidity"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Temperature 3"
      state_topic: "home/esp32_3/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Humidity 3"
      state_topic: "home/esp32_3/humidity"
      unit_of_measurement: "%"
      value_template: "{{ value | float | round(0) }}"
      device_class: "humidity"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Temperature 4"
      state_topic: "home/esp32_4/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200

    - name: "ESP32 Humidity 4"
      state_topic: "home/esp32_4/humidity"
      unit_of_measurement: "%"
      value_template: "{{ value | float | round(0) }}"
      device_class: "humidity"
      state_class: measurement
      expire_after: 1200
      
    - name: "ESP32 Temperature 5"
      state_topic: "home/esp32_5/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200
      
    - name: "ESP32 Temperature 7"
      state_topic: "home/esp32_7/temperature"
      unit_of_measurement: "°C"
      value_template: "{{ value | float | round(1) }}"
      device_class: "temperature"
      state_class: measurement
      expire_after: 1200
      availability_topic: "home/esp32_7/availability"
      payload_available: "online"
      payload_not_available: "offline"
      
    - name: "Beer Elevator Position"
      state_topic: "beer_elevator/position"
      value_template: "{{ value }}"
      icon: mdi:elevator

    - name: "Beer Elevator State"
      state_topic: "beer_elevator/state"
      icon: mdi:elevator

    - name: "Beer Elevator Acceleration (ACK)"
      state_topic: "beer_elevator/config/acceleration"
      unit_of_measurement: "steps/s²"
      
    - name: "UnderBaren Status"
      unique_id: underbaren_status
      state_topic: "beer_elevator/state"
      icon: mdi:elevator
      device_class: "enum"
      options: ["down", "up", "moving_extra_up", "moving_extra_down", "down_warning", "down_extra", "home_set", "down_emergency_reset", "up_emergency_reset"]
      
    # ================================
    # CHICKEN DOOR SENSORS
    # ================================
    
    - name: "Chicken Door Status"
      state_topic: "chickendoor/status"
      icon: "mdi:door-sliding"
      device_class: "enum"
      options: ["ready", "closing", "emergency_stop", "steps_updated", "offline"]
      
    - name: "Chicken Door Uptime"
      state_topic: "chickendoor/heartbeat"
      unit_of_measurement: "s"
      device_class: "duration"
      value_template: "{{ value | int }}"
      expire_after: 120
      
    - name: "Chicken Door Uptime Hours"
      state_topic: "chickendoor/heartbeat"  
      unit_of_measurement: "h"
      device_class: "duration"
      value_template: "{{ (value | int / 3600) | round(1) }}"
      expire_after: 120
      
    # ================================
    # DUCK DOOR SENSORS
    # ================================

    - unique_id: duck_door_status
      name: "Duck Door Status"
      state_topic: "duck/door/status"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"
      device_class: "enum"
      options: ["stopped", "opening", "closing", "closed", "open", "error"]
    - unique_id: duck_door_position
      name: "Duck Door Position"
      state_topic: "duck/door/position"
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"
      device_class: "enum"
      options: ["open", "closed", "moving", "unknown"]
  
    # ================================
    # CAMERA SENSORS
    # ================================
    
    - name: "Camera Settings"
      state_topic: "camera/settings/status"
      value_template: "{{ value_json.status | default('unknown') }}"
      icon: "mdi:camera-settings"
      
    - name: "Camera Status"
      state_topic: "camera/status"
      icon: "mdi:camera"
      value_template: "{{ value_json.status | default('unknown') }}"      

    # ================================
    # CHICKEN RFID MONITORING SYSTEM
    # ================================
    
    - name: "Nest 1 Status"
      unique_id: nest_1_status
      state_topic: "chickens/nest1/status"
      value_template: "{{ value_json.status | default('unknown') }}"
      json_attributes_topic: "chickens/nest1/status"
      icon: "mdi:home-variant"
      device_class: "enum"
      options: ["empty", "occupied", "multiple"]
      
    - name: "Nest 1 Occupant"
      unique_id: nest_1_occupant
      state_topic: "chickens/nest1/occupant"
      icon: "mdi:bird"
      
    - name: "Current Visit Duration"
      unique_id: current_visit_duration
      state_topic: "chickens/nest1/duration"
      unit_of_measurement: "s"
      device_class: "duration"
      icon: "mdi:timer"
      
    - name: "Chicken Visits Log"
      unique_id: chicken_visits_log
      state_topic: "chickens/visits"
      value_template: "{{ value_json.chicken_name | default('No visits') }}"
      json_attributes_topic: "chickens/visits"
      icon: "mdi:clipboard-list"
      
    - name: "Chicken Leaderboard"
      unique_id: chicken_leaderboard
      state_topic: "chickens/leaderboard"
      value_template: "{{ value_json.updated | default(0) }}"
      json_attributes_topic: "chickens/leaderboard"
      icon: "mdi:trophy"
      
    - name: "Chicken System Status"
      unique_id: chicken_system_status
      state_topic: "chickens/system/status"
      icon: "mdi:radar"
      device_class: "enum"
      options: ["online", "offline", "error"]
  
  binary_sensor:
    # ================================
    # CHICKEN DOOR MONITORING
    # ================================
    
    - name: "Chicken Door Online"
      unique_id: chicken_door_online
      state_topic: "chickendoor/heartbeat"
      payload_on: ".*"
      off_delay: 90
      device_class: connectivity
      value_template: "{{ 'ON' if value else 'OFF' }}"

    - name: "Chicken Door Connection"
      unique_id: chicken_door_connection
      state_topic: "chickendoor/heartbeat"
      off_delay: 90     # Consider offline after 90 seconds without heartbeat
      device_class: connectivity
      value_template: "{{ 'ON' if value is defined and value != '' else 'OFF' }}" 
      
    # ================================
    # DUCK DOOR MONITORING
    # ================================

    - name: Duck Door Online
      unique_id: duck_door_online
      state_topic: "duck/door/availability"
      payload_on:  "online"
      payload_off: "offline"
      device_class: connectivity
      qos: 1

    - name: Duck Door Limit Switch
      unique_id: duck_door_limit_switch
      state_topic: "duck/door/limit_switch"
      payload_on: "triggered"
      payload_off: "not_triggered"
      device_class: door
      qos: 1
      availability_topic: "duck/door/availability"
      payload_available: "online"
      payload_not_available: "offline"

    - name: Beer Elevator Moving
      unique_id: beer_elevator_moving
      state_topic: "beer_elevator/state"
      payload_on: "moving_up"
      payload_off: "idle"
      device_class: moving
      off_delay: 5
  
    - name: Beer Elevator Limit Switch
      unique_id: beer_elevator_limit
      state_topic: "beer_elevator/limit_switch"
      payload_on: "down"
      payload_off: "up"
      device_class: door

    # ================================
    # CHICKEN MONITORING SYSTEM
    # ================================
    
    - name: "Nest 1 Occupied"
      unique_id: nest_1_occupied
      state_topic: "chickens/nest1/status"
      value_template: "{{ 'ON' if value_json.status == 'occupied' or value_json.status == 'multiple' else 'OFF' }}"
      device_class: occupancy
      
    - name: "Chicken System Online"
      unique_id: chicken_system_online
      state_topic: "chickens/system/status"
      payload_on: "online"
      payload_off: "offline"
      device_class: connectivity



# ================================
# TEMPLATE ENTITIES
# ================================

template:
  # the Wi-Fi status sensor you already added
  - sensor:
      - name: Duck Door Connection
        unique_id: duck_door_connection
        state: >
          {{ 'Connected' if is_state('binary_sensor.duck_door_online','on')
             else 'Disconnected' }}

      # ================================
      # INDIVIDUAL CHICKEN STATISTICS
      # ================================
      
      # Lady Kluck Individual Stats
      - name: "Lady Kluck Daily Visits"
        unique_id: lady_kluck_daily_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Lady Kluck') | 
             selectattr('timestamp', 'gt', now().strftime('%Y-%m-%d 00:00:00')) | list | length }}
        icon: mdi:counter
        
      - name: "Lady Kluck Total Visits"
        unique_id: lady_kluck_total_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Lady Kluck') | list | length }}
        icon: mdi:sigma
        
      - name: "Lady Kluck Last Visit"
        unique_id: lady_kluck_last_visit
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {% set lady_visits = visits | selectattr('chicken_name', 'eq', 'Lady Kluck') | list %}
          {% if lady_visits %}
            {{ lady_visits[-1].timestamp }}
          {% else %}
            Aldrig
          {% endif %}
        icon: mdi:clock-outline
        
      # Ronny Individual Stats
      - name: "Ronny Daily Visits"
        unique_id: ronny_daily_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Ronny') | 
             selectattr('timestamp', 'gt', now().strftime('%Y-%m-%d 00:00:00')) | list | length }}
        icon: mdi:counter
        
      - name: "Ronny Total Visits"
        unique_id: ronny_total_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Ronny') | list | length }}
        icon: mdi:sigma
        
      # Ada Individual Stats
      - name: "Ada Daily Visits"
        unique_id: ada_daily_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Ada') | 
             selectattr('timestamp', 'gt', now().strftime('%Y-%m-%d 00:00:00')) | list | length }}
        icon: mdi:counter
        
      - name: "Ada Total Visits"
        unique_id: ada_total_visits
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {{ visits | selectattr('chicken_name', 'eq', 'Ada') | list | length }}
        icon: mdi:sigma
        
      # Weekly Champion Calculator
      - name: "Weekly Top Performer"
        unique_id: weekly_top_performer
        state: >
          {% set visits = state_attr('sensor.chicken_visits_log', 'visits') or [] %}
          {% set week_start = (now() - timedelta(days=now().weekday())).strftime('%Y-%m-%d 00:00:00') %}
          {% set weekly_visits = visits | selectattr('timestamp', 'gt', week_start) | list %}
          {% set chickens = ['Lady Kluck', 'Ronny', 'Ada', 'Ms.Foster', 'Kiwi', 'Skrik', 'Panik', 'Gästrid', 'Chick_1_2025', 'Chick_2_2025', 'Chick_3_2025', 'Chick_4_2025', 'Chick_5_2025', 'Chick_6_2025'] %}
          {% set counts = namespace(data={}) %}
          {% for chicken in chickens %}
            {% set count = weekly_visits | selectattr('chicken_name', 'eq', chicken) | list | length %}
            {% set counts.data = dict(counts.data, **{chicken: count}) %}
          {% endfor %}
          {% if counts.data %}
            {{ counts.data | dictsort(false, 'value') | last | first }}
          {% else %}
            Ingen data
          {% endif %}
        icon: mdi:crown

  - binary_sensor:
      - name: "UnderBaren Limit Switch"
        unique_id: underbaren_limit_switch
        device_class: door
        state: >
          {{ is_state('binary_sensor.beer_elevator_limit_switch', 'off') }}

